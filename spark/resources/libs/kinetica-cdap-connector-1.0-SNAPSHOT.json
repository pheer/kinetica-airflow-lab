{
  "parents": [
    "system:cdap-data-pipeline[6.0.0,7.0.0)",
    "system:cdap-data-streams[6.0.0,7.0.0)"
  ],
  "properties": {
    "widgets.Kinetica-batchsink": "{\"metadata\":{\"spec-version\":\"1.0\"},\"display-name\":\"Kinetica\",\"configuration-groups\":[{\"label\":\"Lineage\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Reference Name\",\"name\":\"referenceName\",\"widget-attributes\":{\"placeholder\":\"Name used to identify this sink for lineage\"}}]},{\"label\":\"Connectivity\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Kinetica Endpoint\",\"name\":\"kineticaEndpoint\",\"widget-attributes\":{\"default\":\"http://localhost:9191\"}},{\"widget-type\":\"toggle\",\"label\":\"Use Multi-Head Ingest\",\"name\":\"multihead\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"false\"}},{\"widget-type\":\"toggle\",\"label\":\"Bypass SSL Certificate Check (self-signed)\",\"name\":\"bypassSSLcertCheck\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"true\"}}]},{\"label\":\"Credentials\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"User Name\",\"name\":\"userName\"},{\"widget-type\":\"password\",\"label\":\"Password\",\"name\":\"password\"}]},{\"label\":\"Kinetica Table\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Schema Name\",\"name\":\"schemaName\"},{\"widget-type\":\"textbox\",\"label\":\"Table Name\",\"name\":\"tableName\"},{\"widget-type\":\"toggle\",\"label\":\"Create Table If Not Exists\",\"name\":\"createTableIfNotExists\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"true\"}},{\"widget-type\":\"toggle\",\"label\":\"Truncate Table Before Run\",\"name\":\"truncateTable\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"false\"}},{\"widget-type\":\"toggle\",\"label\":\"Drop and Create Table Before Run\",\"name\":\"dropTable\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"false\"}}]},{\"label\":\"Advanced\",\"properties\":[{\"widget-type\":\"toggle\",\"label\":\"Convert Blank Fields to NULL\",\"name\":\"blankFieldsToNull\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"true\"}},{\"widget-type\":\"number\",\"label\":\"Connection Timeout (seconds)\",\"name\":\"connectionTimeoutInSeconds\",\"widget-attributes\":{\"default\":\"10\"}},{\"widget-type\":\"number\",\"label\":\"Batch Size\",\"name\":\"batchSize\",\"widget-attributes\":{\"default\":\"10000\"}}]}],\"emit-errors\":true,\"outputs\":[{\"name\":\"outputSchema\",\"widget-type\":\"schema\",\"widget-attributes\":{\"schema-default-type\":\"string\",\"schema-types\":[\"boolean\",\"int\",\"long\",\"float\",\"double\",\"bytes\",\"string\"]}}],\"jump-config\":{\"datasets\":[{\"ref-property-name\":\"referenceName\"}]}}",
    "widgets.Kinetica-batchsource": "{\"metadata\":{\"spec-version\":\"1.0\"},\"display-name\":\"Kinetica\",\"configuration-groups\":[{\"label\":\"Lineage\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Reference Name\",\"name\":\"referenceName\",\"widget-attributes\":{\"placeholder\":\"Name used to identify this sink for lineage\"}}]},{\"label\":\"Connectivity\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Kinetica Endpoint\",\"name\":\"kineticaEndpoint\",\"widget-attributes\":{\"default\":\"http://localhost:9191\"}},{\"widget-type\":\"toggle\",\"label\":\"Bypass SSL Certificate Check (self-signed)\",\"name\":\"bypassSSLcertCheck\",\"widget-attributes\":{\"on\":{\"value\":\"true\",\"label\":\"Yes\"},\"off\":{\"value\":\"false\",\"label\":\"No\"},\"default\":\"true\"}}]},{\"label\":\"Credentials\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"User Name\",\"name\":\"userName\"},{\"widget-type\":\"password\",\"label\":\"Password\",\"name\":\"password\"}]},{\"label\":\"Kinetica Table\",\"properties\":[{\"widget-type\":\"textbox\",\"label\":\"Schema name\",\"name\":\"schemaName\"},{\"widget-type\":\"textbox\",\"label\":\"Table Name\",\"name\":\"tableName\"}]},{\"label\":\"Advanced\",\"properties\":[{\"widget-type\":\"number\",\"label\":\"Connection Timeout (seconds)\",\"name\":\"connectionTimeoutInSeconds\",\"widget-attributes\":{\"default\":\"10\"}},{\"widget-type\":\"number\",\"label\":\"Number of Splits\",\"name\":\"numberOfSplits\",\"widget-attributes\":{\"default\":\"2\"}},{\"widget-type\":\"number\",\"label\":\"Batch Size\",\"name\":\"batchSize\",\"widget-attributes\":{\"default\":\"10000\"}}]}],\"outputs\":[{\"name\":\"outputSchema\",\"widget-type\":\"schema\",\"widget-attributes\":{\"schema-default-type\":\"string\",\"schema-types\":[\"boolean\",\"int\",\"long\",\"float\",\"double\",\"bytes\",\"string\"]}}],\"jump-config\":{\"datasets\":[{\"ref-property-name\":\"referenceName\"}]}}",
    "doc.Kinetica-batchsink": "# Kinetica Batch Sink\n\nDescription\n-----------\nWrites records to a Kinetica table. Each record will be written to a row in the table. The table must have been created\nin Kinetica already.\n\nUse Case\n--------\nThis sink is used whenever you need to write to a Kinetica table.\nColumn names would be autodetected from the input schema.\n\nProperties\n----------\n**Reference Name:** Name used to uniquely identify this sink for lineage, annotating metadata, etc.\n\n**Host:** Host that Kinetica is running on.\n\n**Port:** Port that Kinetica is running on.\n\n**Collection:** Kinetica collection name.\n\n**Table Name:** Name of the table to insert into.\n\n**Username:** User name to use for authentication.\n\n**Password:** Password to use for authentication.\n\n**Connection Arguments:** A list of arbitrary string key/value pairs as connection arguments. These arguments\nwill be passed to the JDBC driver as connection arguments for JDBC drivers that may need additional configurations.\n\n**Batch Size:** Number of records cached before being flushed out in a single batch.\n\n**Connection Timeout:** The timeout value used for socket connect operations. If connecting to the server takes longer\nthan this value, the connection is unavailable. The timeout is specified in seconds and a value of zero means that it is \ndisabled.\n\nExample\n-------\nSuppose you want to write records to the \"users\" table in a Kinetica collection named \"prod\" that is running on \"localhost\", \nport 9191, as \"admin\" user with \"123456\" as password (Ensure that the driver for Kinetica is installed. You can also provide \ndriver name for some specific driver, otherwise \"kinetica\" will be used), then configure the plugin with: \n\n```\nReference Name: \"kinetica\"\nHost: \"localhost\"\nPort: 9191\nCollection name: \"prod\"\nTable Name: \"users\"\nUsername: \"admin\"\nPassword: \"123456\"\n```\nData Types Mapping\n------\nAll Kinetica specific data types are mapped to \"string\" and can have multiple input formats and one \"canonical\" output form.\nPlease, refer to the Kinetica data types documentation at https://www.kinetica.com/docs/concepts/sql.html#column-types for details.\n\n| Kinetica Data Type                                 | CDAP Schema Data Type | Comment                                      |\n|-----------------------------------------------------|-----------------------|----------------------------------------------|\n| bigint                                              | long                  |                                              |\n| bit(n)                                              | string                | string with '0' and '1' chars exact n length |\n| bit varying(n)                                      | string                | string with '0' and '1' chars max n length   |\n| boolean                                             | boolean               |                                              |\n| bytea                                               | bytes                 |                                              |\n| character                                           | string                |                                              |\n| character varying                                   | string                |                                              |\n| double precision                                    | double                |                                              |\n| integer                                             | int                   |                                              |\n| numeric(precision, scale)/decimal(precision, scale) | decimal               |                                              |\n| real                                                | float                 |                                              |\n| smallint                                            | int                   |                                              |\n| text                                                | string                |                                              |\n| date                                                | date                  |                                              |\n| time [ (p) ] [ without time zone ]                  | time                  |                                              |\n| time [ (p) ] with time zone                         | string                |                                              |\n| timestamp [ (p) ] [ without time zone ]             | timestamp             |                                              |\n| timestamp [ (p) ] with time zone                    | timestamp             | stored in UTC format in database             |\n| xml                                                 | string                |                                              |\n| tsquery                                             | string                |                                              |\n| tsvector                                            | string                |                                              |\n| uuid                                                | string                |                                              |\n| box                                                 | string                |                                              |\n| cidr                                                | string                |                                              |\n| circle                                              | string                |                                              |\n| inet                                                | string                |                                              |\n| interval                                            | string                |                                              |\n| json                                                | string                |                                              |\n| jsonb                                               | string                |                                              |\n| line                                                | string                |                                              |\n| lseg                                                | string                |                                              |\n| macaddr                                             | string                |                                              |\n| macaddr8                                            | string                |                                              |\n| money                                               | string                |                                              |\n| path                                                | string                |                                              |\n| point                                               | string                |                                              |\n| polygon                                             | string                |                                              |",
    "doc.ErrorCollector-errortransform": "# Error Collector\n\n\nDescription\n-----------\nThe ErrorCollector plugin takes errors emitted from the previous stage and flattens them by adding\nthe error message, code, and stage to the record and outputting the result.\n\nUse Case\n--------\nThe plugin is used when you want to capture errors emitted from another stage and pass them along\nwith all the error information flattened into the record. For example, you may want to connect a sink\nto this plugin in order to store and later examine the error records.\n\nProperties\n----------\n**messageField:** The name of the error message field to use in the output schema. Defaults to 'errMsg'.\nIf this is not specified, the error message will be dropped.\n\n**codeField:** The name of the error code field to use in the output schema. Defaults to 'errCode'.\nIf this is not specified, the error code will be dropped.\n\n**stageField:** The name of the error stage field to use in the output schema. Defaults to 'errStage'.\nIf this is not specified, the error stage will be dropped.\n\n\nExample\n-------\nThis example adds the error message, error code, and error stage as the 'errMsg', 'errCode', and 'errStage' fields.\n\n    {\n        \"name\": \"ErrorCollector\",\n        \"type\": \"errortransform\",\n        \"properties\": {\n            \"messageField\": \"errMsg\",\n            \"codeField\": \"errCode\",\n            \"stageField\": \"errStage\"\n        }\n    }\n\nFor example, suppose the plugin receives this error record:\n\n    +============================+\n    | field name | type | value  |\n    +============================+\n    | A          | int  | 10     |\n    | B          | int  | 20     |\n    +============================+\n\nwith error code 17, error message 'invalid', from stage 'parser'. It will add the error information\nto the record and output:\n\n    +===============================+\n    | field name | type   | value   |\n    +===============================+\n    | A          | int    | 10      |\n    | B          | int    | 20      |\n    | errMsg     | string | invalid |\n    | errCode    | int    | 17      |\n    | errStage   | string | parser  |\n    +===============================+\n",
    "doc.Kinetica-transform": "# Kinetica Transform\n\nDescription\n-----------\n\nChanges configured fields to lowercase or uppercase.\n\nUse Case\n--------\n\nThis transform is used whenever you need to uppercase or lowercase one or more fields.\n\nProperties\n----------\n\n**lowerFields:** Comma separated list of fields to lowercase.\n\n**upperFields:** Comma separated list of fields to uppercase.\n\nExample\n-------\n\nThis example lowercases the 'name' field and uppercases the 'id' field:\n\n    {\n        \"name\": \"StringCase\",\n        \"type\": \"transform\",\n        \"properties\": {\n            \"lowerFields\": \"name\",\n            \"upperFields\": \"id\"\n        }\n    }\n",
    "doc.Kinetica-batchsource": "# Text FileSet Batch Source\n\nDescription\n-----------\n\nReads from a CDAP FileSet in text format. Outputs records with two fields -- position (long), and text (string).\n\nUse Case\n--------\n\nThis source is used whenever you need to read from a FileSet in text format.\n\nProperties\n----------\n\n**fileSetName:** The name of the FileSet to read from.\n\n**createIfNotExists:** Whether to create the FileSet if it does not exist. Defaults to false.\n\n**deleteInputOnSuccess:** Whether to delete the data read if the pipeline run succeeded. Defaults to false.\n\n**files:** A comma separated list of files in the FileSet to read. Macro enabled.\n\nExample\n-------\n\nThis example reads from a FileSet named 'users' and deletes the data it read if the pipeline run succeeded:\n\n    {\n        \"name\": \"TextFileSet\",\n        \"type\": \"batchsource\",\n        \"properties\": {\n            \"fileSetName\": \"users\",\n            \"deleteInputOnSuccess\": \"true\",\n            \"files\": \"${inputFiles}\"\n        }\n    }\n\nBefore running the pipeline, the 'inputFiles' runtime argument must be specified.\n"
  }
}